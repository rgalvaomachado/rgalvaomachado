name: Gerar README Simples

on:
  # Executa manualmente
  workflow_dispatch:
  # Executa no push para main
  push:
    branches:
      - main
  # ⭐ NOVO: Executa automaticamente todo dia às 00:00 UTC
  schedule:
    - cron: '0 0 * * *'

jobs:
  criar_readme:
    runs-on: ubuntu-latest
    
    steps:
      # Passo 1: Faz o checkout do código
      - name: Checkout do Repositório
        uses: actions/checkout@v4
        
      # Passo 2: Buscar dados da API do GitHub
      - name: Buscar dados de contribuições
        id: get_data
        run: |
          RESPONSE=$(curl --silent --location 'https://api.github.com/graphql' \
            --header 'Authorization: bearer ${{ secrets.GH_PROFISSIONAL_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data '{"query":"query { user(login: \"romulosuperlogica\") { contributionsCollection { totalCommitContributions totalPullRequestContributions totalPullRequestReviewContributions } } }","variables":{}}')
          
          # Extrair os valores usando jq (já instalado no Ubuntu)
          COMMITS=$(echo $RESPONSE | jq -r '.data.user.contributionsCollection.totalCommitContributions')
          PRS_OPENED=$(echo $RESPONSE | jq -r '.data.user.contributionsCollection.totalPullRequestContributions')
          PRS_REVIEWED=$(echo $RESPONSE | jq -r '.data.user.contributionsCollection.totalPullRequestReviewContributions')
          
          # Salvar nas outputs do step
          echo "commits=$COMMITS" >> $GITHUB_OUTPUT
          echo "prs_opened=$PRS_OPENED" >> $GITHUB_OUTPUT
          echo "prs_reviewed=$PRS_REVIEWED" >> $GITHUB_OUTPUT
          
          # Debug: mostrar os valores
          echo "Commits: $COMMITS"
          echo "PRs Abertos: $PRS_OPENED"
          echo "PRs Revisados: $PRS_REVIEWED"

      # Passo 3: Criar/Atualizar o conteúdo do README
      - name: Criar e Anexar Conteúdo ao README
        run: |
          # Usar as variáveis do passo anterior
          COMMITS="${{ steps.get_data.outputs.commits }}"
          PRS_OPENED="${{ steps.get_data.outputs.prs_opened }}"
          PRS_REVIEWED="${{ steps.get_data.outputs.prs_reviewed }}"
          
          # Criar o README.md
          echo '# Gostou do que viu por aqui?' > README.md
          echo '' >> README.md
          echo 'O que acha de ver tambem meu overview profissional ?' > README.md
          
          # HTML com os dados dinâmicos
          echo '<p align="center">' >> README.md
          echo '  <table align="center" style="text-align: center;">' >> README.md
          echo '      <thead>' >> README.md
          echo '          <tr>' >> README.md
          echo '              <th style="font-size: 16px;">Commits (Total)</th>' >> README.md
          echo '              <th style="font-size: 16px;">PRs Abertos</th>' >> README.md
          echo '              <th style="font-size: 16px;">Reviews Feitas</th>' >> README.md
          echo '          </tr>' >> README.md
          echo '      </thead>' >> README.md
          echo '      <tbody>' >> README.md
          echo '          <tr>' >> README.md
          echo '              <td style="font-size: 24px; font-weight: bold; padding: 10px 20px;">'"${COMMITS}"'</td>' >> README.md
          echo '              <td style="font-size: 24px; font-weight: bold; padding: 10px 20px;">'"${PRS_OPENED}"'</td>' >> README.md
          echo '              <td style="font-size: 24px; font-weight: bold; padding: 10px 20px;">'"${PRS_REVIEWED}"'</td>' >> README.md
          echo '          </tr>' >> README.md
          echo '      </tbody>' >> README.md
          echo '  </table>' >> README.md
          echo '</p>' >> README.md

          echo 'Ficou com dúvida? Acesse diretamente meu perfil completo em https://github.com/romulosuperlogica' >> README.md

      # Passo 4: Commit e Push das alterações no README
      - name: Commit e Enviar o novo README.md
        uses: EndBug/add-and-commit@v9
        with:
          message: 'docs: Atualiza README.md com dados reais de contribuições'
          add: 'README.md'
          token: ${{ secrets.GITHUB_TOKEN }}
